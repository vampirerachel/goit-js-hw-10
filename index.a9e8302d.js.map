{"mappings":"SAWAA,QAAQC,IAPDC,MAAM,uCAOc,2DAPkBC,MAAMC,IAC/C,IAAKA,EAASC,GACd,MAAM,IAAIC,MAAMF,EAASG,QACzB,OAAOH,EAASI,MAAM,KCL1B,MACMC,EAAUC,SAASC,cAAc,eACjCC,EAAcF,SAASC,cAAc,iBACrBD,SAASC,cAAc,iBA2E7CF,EAAQI,iBAAiB,SAxEL,SAAkBC,GAElC,MAAMC,EAAYD,EAAEE,OAAOC,MAAMC,OAEf,KAAdH,IAAoBH,EAAYO,UAAY,IAE7CJ,GACHK,EAAAC,IAAIC,eAAeP,GAAWZ,MAAKoB,IAyCnC,SAASC,GAAcC,MAAEA,EAAKC,KAAEA,EAAIC,QAAEA,EAAOC,WAAEA,EAAUC,UAAEA,IAAY,MAAO,0GAElCJ,EAAMK,aAAaJ,EAAKK,kFACfL,EAAKK,2QAIeJ,yQAIAC,wQAIAI,OAAOC,OAAOJ,6B,CAtD/EN,EAAKW,OAAS,GACdlC,QAAQC,IAAI,8DAKXsB,EAAKN,QAAUF,EACpBS,IAKSD,EAAKW,OAAS,GAAKX,EAAKW,QAAU,GACvCX,EAAKY,SAAQC,IACbZ,GAAc,IAKS,IAAhBD,EAAKW,OAWpB,UAA2BT,MAAEA,EAAKC,KAAEA,IAEID,EAAMK,IAAaJ,EAAKK,SAC1DL,EAAKK,Q,CAbHM,GAKiB,IAAhBd,EAAKW,QACNI,MAAM,qC","sources":["src/js/fetchCountries.js","src/js/index.js"],"sourcesContent":["\nfunction fetchCountries(name) {\nconst BASE_URL = \"https://restcountries.com/v3.1/name/\";\nconst options = \"?fields=name,capital,population,flags,languages\";\nreturn fetch(`${BASE_URL}${name}${options}`).then((response) => {\n    if (!response.ok) {\n    throw new Error(response.status);}\n    return response.json();\n});\n}\n\nconsole.log(fetchCountries('Sweden'))","import '../css/styles.css';\nimport { API } from './fetchCountries'\nconst DEBOUNCE_DELAY = 300;\nconst inputEl = document.querySelector(\"#search-box\")\nconst countryList = document.querySelector(\".country-list\")\nconst countryInfoEl = document.querySelector(\".country-info\")\n\n\nconst handleInput = function checkApi(e) {\n\n    const userInput = e.target.value.trim();\n    \n    if (userInput === '') { countryList.innerHTML = ''; }\n    \n    if(userInput) {\n    API.fetchCountries(userInput).then(data => {\n\n        if (data.length > 10) {\n            console.log('Too many matches found. Please enter a more specific name.');\n        }\n\n\n        else if\n            (data.value === userInput){\n        createMarkup()\n            }\n        \n\n\n        else if (data.length > 1 && data.length <= 10) {\n            data.forEach(item => {\n            createMarkup()\n            });\n\n\n            \n        } else if (data.length === 1) {\n            onShowCountryList()\n        }\n            \n            \n        else if\n            (data.length === 0) {\n            alert(\"there is no country with that name\")\n        }\n\n\n    function onShowCountryList({ flags, name }) {return `\n    <li style=\"display:flex;\">\n    <img style=\"margin-right: 15px;\" src=\"${flags.svg}\" alt=\"${name.official}\" width=50/>\n    <h2>${name.official}</h2>\n    </li>\n    `;}\n\n\n\n    function createMarkup ({ flags, name, capital, population, languages}){return `\n    <div style='display: flex; align-items: center;'>\n        <img style=\"margin-right: 15px;\" src='${flags.svg}' alt='${name.official}' width=100 />\n        <h2 style=\"font-size: 36px; font-weight: 700;\">${name.official}</h2>\n    </div>\n    <div style='display: flex; align-items: center;'>\n        <p style=\"margin-right: 15px; font-size: 28px; font-weight: 500; color: darkgreen; \">Capital:</p>\n        <span style=\"font-size: 30px; font-weight: 700; color: darkblue; \">${capital}</span>\n    </div>\n    <div style='display: flex; align-items: center;'>\n        <p style=\"margin-right: 15px; font-size: 28px; font-weight: 500; color: darkgreen; \">Population:</p>\n        <span style=\"font-size: 30px; font-weight: 700; color: darkblue; \">${population}</span>\n    </div>\n    <div style='display: flex; align-items: center;'>\n        <p style=\"margin-right: 15px; font-size: 28px; font-weight: 500; color: darkgreen; \">Languages:</p>\n        <span style=\"font-size: 30px; font-weight: 700; color: darkblue; \">${Object.values(languages)}</span>\n    </div>\n    `};\n\n\n    })};\n}\n//TODO we need to debounce our addEventListener for every 300ms\n\ninputEl.addEventListener('input', handleInput); \n\n\n    \n"],"names":["console","log","fetch","then","response","ok","Error","status","json","$85a5f86b715fe7db$var$inputEl","document","querySelector","$85a5f86b715fe7db$var$countryList","addEventListener","e","userInput","target","value","trim","innerHTML","$b8db4ffe7b39e3b7$exports","API","fetchCountries","data","createMarkup","flags","name","capital","population","languages","svg","official","Object","values","length","forEach","item","onShowCountryList","alert"],"version":3,"file":"index.a9e8302d.js.map"}